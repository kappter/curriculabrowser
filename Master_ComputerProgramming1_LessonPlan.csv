Day,Strand/Standard,Title,Concepts,Starter,Description
1,Strand 1 / Standard 1,Programming Languages,Interpreted vs Compiled, High-level vs Low-level,Gallery Walk: Examples of code in various languages; students guess which are compiled vs interpreted,Students will explore the differences between interpreted and compiled programming languages, as well as high-level versus low-level languages, through a lecture and code examples. They will discuss real-world applications of each type. The submittable artifact is a short written reflection on one language’s use case.
2,Strand 1 / Standard 2,Using an IDE,IDE features, compile/run, debugging, syntax vs runtime vs logic errors,Quick IDE Tour: Pair-share what each button or menu might do before demoing,The lesson focuses on navigating an Integrated Development Environment (IDE), covering compilation, execution, and debugging. Students will practice identifying syntax, runtime, and logic errors in sample code. The submittable artifact is a screenshot of a debugged program with annotations explaining one error fixed.
3,Strand 1 / Performance,IDE Project,Create a program using IDE,Mini Debugging Challenge: Find bugs in sample IDE output,Students will apply IDE skills to create a simple program, such as a basic calculator, and debug it. The focus is hands-on coding and testing. The submittable artifact is the completed program code file.
4,Strand 2 / Standard 1,Programming Style Basics,White space, naming conventions, constants vs variables,**Read My Code!** (5-7 mins): Show two very short code snippets (pseudocode or actual simple code). One should be poorly formatted/named, the other well-formatted. Ask students which is easier to read and why.,The lesson introduces programming style, emphasizing readable code through proper white space, naming conventions, and constants. Students will refactor a poorly formatted code snippet. The submittable artifact is the refactored code with a brief explanation of changes made.
5,Strand 2 / Standard 1,Identifier Formats,camelCase, snake_case, PascalCase,Naming Game: Rename sloppy variables using proper conventions,Students will learn about identifier formats like camelCase and snake_case, practicing their application in variable naming. The focus is on writing clear, standardized code. The submittable artifact is a list of renamed variables from a provided code sample.
6,Strand 2 / Standard 1,Output Formatting,Decimal places, dollar signs, sentence formatting,**Making it Pretty** (5-7 mins): Provide students with raw data (e.g., a number like 1234.5678, a name and an age). Ask them how they would present this data to a user to make it easily understandable and look professional (e.g., as a currency, as a sentence).,The lesson covers formatting output for user readability, such as currency or sentence structures. Students will write code to format sample data. The submittable artifact is a program that correctly formats a set of numerical and string outputs.
7,Strand 2 / Standard 2,Software Development Life Cycle,Requirements, Design, Implementation, Testing, Release,Sticky Note Flowchart: Build out SDLC stages on wall posters,Students will explore the Software Development Life Cycle (SDLC) through a group activity mapping its stages. They will discuss each phase’s role in programming projects. The submittable artifact is a flowchart of the SDLC for a hypothetical app.
8,Strand 2 / Standard 2,Designing Algorithms,UML diagrams, pseudocode, top-down design,UML Sketch-Off: Draw a flowchart or pseudocode for to-do app,The focus is on algorithm design using UML diagrams and pseudocode for a to-do list application. Students will practice top-down design principles. The submittable artifact is a UML diagram or pseudocode for the app.
9,Strand 2 / Performance,Development Project,Apply SDLC to a complete program,SDLC Group Sprint: Apply all stages to a calculator project,Students will apply the SDLC to develop a calculator program, from requirements to testing. The lesson emphasizes teamwork and project planning. The submittable artifact is the completed calculator program code and a brief project report.
10,Strand 3 / Standard 1,Input/Output Basics,Input vs Output, I/O Devices,Input/Output Sorting: Categorize real-world examples of input vs output,The lesson introduces input/output concepts, exploring devices and their roles in programming. Students will analyze real-world I/O examples. The submittable artifact is a diagram categorizing five I/O examples.
11,Strand 3 / Standard 2,Data Types Overview,Boolean, Integer, Float, String,**Information Sort** (5-7 mins): Provide a list of various pieces of information (e.g., "your age," "your name," "is it raining?," "your GPA"). Ask students how they would categorize each piece of information based on its nature.,Students will learn about basic data types (Boolean, Integer, Float, String) and their applications. They will practice declaring variables of different types. The submittable artifact is a short program demonstrating the use of all four data types.
12,Strand 3 / Standard 2,Declaring & Initializing Variables,Assignment, declaration vs initialization,**The Empty Box** (5-7 mins): Bring in an empty box and a toy. Explain that declaring is like labeling the box, and initializing is like putting the toy inside. Discuss why you might want to label an empty box.,The focus is on variable declaration and initialization, emphasizing their differences. Students will write code to declare and initialize variables. The submittable artifact is a code snippet with five properly declared and initialized variables.
13,Strand 3 / Standard 3,Arithmetic Operators,Addition, Subtraction, Multiplication, Division, Modulus,Arithmetic Showdown: Solve math with code and compare to math class logic,Students will explore arithmetic operators through coding exercises, comparing them to mathematical operations. They will write a program using all operators. The submittable artifact is a program calculating results with each operator.
14,Strand 3 / Standard 3,Comparison & Logic Operators,<, >, ==, AND, OR, NOT,Logic Card Sort: Match operators to examples and true/false results,The lesson covers comparison and logic operators, focusing on their use in decision-making. Students will create expressions combining operators. The submittable artifact is a set of five logical expressions with expected outputs.
15,Strand 3 / Standard 3,Order of Operations,PEMMDAS, parenthesis, operator precedence,PEMMDAS Race: Students order expressions by precedence under time limit,Students will learn the order of operations (PEMMDAS) in programming, practicing with complex expressions. The focus is on correct expression evaluation. The submittable artifact is a worksheet with five evaluated expressions and explanations.
16,Strand 3 / Standard 4,Expressions,Operators + Operands, Syntactic correctness,Expression Match: Match valid and invalid expressions to explanations,The lesson focuses on constructing syntactically correct expressions using operators and operands. Students will identify and fix invalid expressions. The submittable artifact is a corrected set of five expressions with explanations.
17,Strand 3 / Standard 5,Functions & Scope,Function use, local vs global variables,**Chef's Station** (5-7 mins): Imagine a restaurant kitchen. The 'sauce station' only knows about the ingredients for sauces (local). The 'pantry' knows about all ingredients (global). How does this help organize the kitchen?,Students will explore functions and variable scope, writing simple functions with local and global variables. The focus is on modularity. The submittable artifact is a program with two functions demonstrating scope.
18,Strand 3 / Standard 5,Built-in vs User-defined Functions,Arguments, Return values,**Toolbox Analogy** (5-7 mins): Show a multi-tool vs. a custom-built tool. Discuss how some tools (built-in functions) are readily available, while others (user-defined functions) you create for specific needs.,The lesson compares built-in and user-defined functions, focusing on arguments and return values. Students will write a user-defined function. The submittable artifact is a program with one built-in and one user-defined function.
19,Strand 3 / Standard 6,Complex Data Types,Strings, Arrays, Lists,**Organizing Your Stuff** (5-7 mins): Ask students how they organize their school supplies. Do they keep individual pencils (simple) or a whole pencil case with multiple items (complex)? Relate this to how computers store different kinds of data.,Students will learn about complex data types like strings, arrays, and lists, practicing their declaration and use. The focus is on data organization. The submittable artifact is a program using an array and a string.
20,Strand 3 / Performance,Mini Project: Data & Functions,Write program using all key concepts,Concept Map Sprint: Build a wall chart showing links between Strand 3 topics,Students will create a program combining data types, functions, and expressions, applying Strand 3 concepts. The lesson emphasizes project integration. The submittable artifact is the program code and a concept map.
21,Strand 4 / Standard 1,IF Statements,IF, ELSE IF, ELSE logic, nesting,Code Snippet Judge: Rank IF statements on readability and logic,The lesson introduces IF statements, including ELSE IF and ELSE, with a focus on nesting. Students will write conditional logic code. The submittable artifact is a program with nested IF statements.
22,Strand 4 / Standard 2,Loops: For Loops,Loop structure, initial/condition/update,Loop Build Challenge: Write a simple for-loop from a visual diagram,Students will learn for-loop structure and practice writing loops for repetitive tasks. The focus is on loop mechanics. The submittable artifact is a program with a working for-loop.
23,Strand 4 / Standard 2,Loops: While Loops,While-loop logic, use cases,While-Loop Maze: Follow a condition through a loop ‘path’,The lesson covers while loops, exploring their use cases and differences from for loops. Students will write a while loop program. The submittable artifact is a program with a working while loop.
24,Strand 4 / Standard 2,Nested Loops & Loop Exit,Break, condition met/failed, infinite loops,Loop Ending Escape Room: Identify what ends each loop scenario,Students will explore nested loops and loop exit strategies like break statements. The focus is on controlling loop flow. The submittable artifact is a program with nested loops and a break statement.
25,Strand 4 / Standard 3,Complex Conditions,Relational + Logical operators in loops,Complex Condition Mad Lib: Build silly but valid loop conditions,The lesson focuses on combining relational and logical operators in loop conditions. Students will write complex conditional loops. The submittable artifact is a program with a loop using complex conditions.
26,Strand 4 / Performance,Control Structures Project,Apply IFs and Loops in programs,IF/LOOP Bingo: Win by spotting correct use in live code walkthroughs,Students will create a program combining IF statements and loops, applying Strand 4 concepts. The lesson emphasizes practical application. The submittable artifact is the program code and a brief explanation of control structures used.
27,Strand 5 / Standard 1,Careers in Programming,Team roles: leader, analyst, developer, SME,Career Hat Day: Match personality traits to programming job roles,The lesson explores programming careers, focusing on team roles like leader and developer. Students will research one role. The submittable artifact is a one-page summary of a programming role.
28,Strand 5 / Standard 1,Traits of Programmers,Problem solving, collaboration, creativity,Team Role Drama: Perform a mini-sketch for each team role,Students will discuss traits like problem-solving and collaboration essential for programmers. They will perform a group skit. The submittable artifact is a written reflection on one programmer trait.
29,Strand 5 / Standard 1,Pathways and Trends,Related career paths, industry trends,Trend Debate: AI programming—boon or risk?,The lesson covers career pathways and current trends like AI in programming. Students will debate a trend’s impact. The submittable artifact is a debate position paper on one trend.
30,Strand 5 / Standard 2,Ethics in Programming,Piracy, privacy, copyright, automation,Ethics Dilemma Cards: What should a dev do in questionable scenarios?,Students will explore ethical issues in programming, such as piracy and privacy, through case studies. The focus is on ethical decision-making. The submittable artifact is a written response to an ethics dilemma.
31,Strand 5 / Standard 2,Impact of Software,Workplace and societal implications,Impact Pyramid: Stack how software affects individual → global society,The lesson examines software’s impact on workplaces and society, from individual to global levels. Students will create an impact diagram. The submittable artifact is the diagram with annotations.
32,Strand 5 / Performance,Career Exploration Project,Present on a chosen software career,Career Pitch: 60-sec elevator pitch for a dream tech job,Students will research and present on a software career, applying Strand 5 concepts. The focus is on career exploration and presentation skills. The submittable artifact is a slide deck and pitch script.
33,Workplace Skills,Professional Skills,Communication, Teamwork, Accountability,Skill Scenarios: Match professional traits to success stories,The lesson focuses on workplace skills like communication and teamwork, with group activities. Students will analyze real-world scenarios. The submittable artifact is a written analysis of one scenario.
34,Review,Vocabulary & Syntax Practice,Key terms, syntax review,Syntax Bee: Students fix syntax on-the-fly in speed rounds,Students will review key programming terms and syntax through interactive exercises. The focus is on reinforcing foundational knowledge. The submittable artifact is a completed syntax worksheet.
35,Review,Problem Solving Strategies,Decomposition, pattern recognition,Pattern Detectives: Spot repeat logic in real-life code examples,The lesson covers problem-solving strategies like decomposition and pattern recognition. Students will analyze code for patterns. The submittable artifact is a pattern analysis report for a code sample.
36,Assessment,Midterm Project,Apply Strands 3–4 in a complete program,Midterm Launch: Gallery of project prompts; students pick and plan,Students will create a program applying data types, functions, and control structures. The focus is on integrating Strands 3 and 4. The submittable artifact is the program code and a project plan.
37,Assessment,Certification Practice,Prep for Skill Certification Test #820,Mock Cert Test: Time-based multiple choice practice,The lesson prepares students for the Skill Certification Test #820 with practice questions. The focus is on test-taking strategies. The submittable artifact is a completed practice test.
38,Assessment,Final Project Design,Student-driven coding project design,Project Planner: Fill out design doc with pseudocode + diagrams,Students will design a final coding project, creating pseudocode and diagrams. The focus is on project planning. The submittable artifact is a design document with pseudocode and UML.
39,Assessment,Final Project Implementation,Code, test, and present project,Code Studio: Build, test, and peer review projects,Students will implement, test, and present their final project, applying all course concepts. The focus is on execution and peer review. The submittable artifact is the final program code and presentation.
40,Wrap-up,Reflection & Showcase,Review progress and present learning outcomes,Reflection Wheel: Spin and speak—what did you learn, struggle with, enjoy?,The lesson reflects on the course, with students presenting their learning outcomes. The focus is on self-assessment and celebration. The submittable artifact is a written reflection on the course experience.