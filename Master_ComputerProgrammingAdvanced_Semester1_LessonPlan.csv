Day,Strand/Standard,Title,Concepts,Starter,Description
1,"Strand 1 / Standard 1",Introduction to Advanced Programming,"Object-oriented principles, advanced concepts","Code Critique: Review a simple program and suggest advanced improvements.","Students will explore advanced programming concepts, building on prior knowledge from Computer Programming 2. They will discuss object-oriented principles in their chosen language (Java, C++, Python, or C#). The submittable artifact is a written analysis of a program’s potential improvements, saved as a text file."
2,"Strand 1 / Standard 1",Review of OOP Basics,"Classes, objects, encapsulation","OOP Match: Match OOP terms to examples in a chosen language.","The lesson reviews object-oriented programming (OOP) basics like classes and encapsulation in a student-chosen language using an IDE. Students will analyze a class structure. The submittable artifact is a source file (e.g., .java, .cpp, .py, .cs) defining a simple class."
3,"Strand 1 / Standard 2",Inheritance,"Inheritance, polymorphism","Inheritance Puzzle: Draw an inheritance hierarchy for a game (e.g., characters).","Students will learn inheritance and polymorphism in their chosen language, implementing a class hierarchy in an IDE. The focus is on code reuse. The submittable artifact is a source file with an inheritance hierarchy."
4,"Strand 1 / Standard 2",Interfaces and Abstract Classes,"Interfaces, abstract methods","Interface Guess: Predict the role of an interface in a sample program.","The lesson covers interfaces and abstract classes in a chosen language, emphasizing abstraction. Students will implement an interface. The submittable artifact is a source file using an interface or abstract class."
5,"Strand 1 / Standard 3",Static vs Dynamic Arrays,"Static arrays, dynamic arrays (ArrayList, vector)","Array Swap: Compare static and dynamic array uses in a scenario.","Students will compare static and dynamic arrays in their chosen language, coding a dynamic array operation in an IDE. The focus is on flexibility. The submittable artifact is a source file manipulating a dynamic array."
6,"Strand 1 / Standard 3",Array Operations,"Traversal, searching, sorting","Array Challenge: Plan a search algorithm for an array on paper.","The lesson explores array operations (traversal, searching, sorting) in a chosen language. Students will implement a search algorithm in an IDE. The submittable artifact is a source file with a search function."
7,"Strand 1 / Standard 4",Stacks,"Stack operations, LIFO","Stack Simulation: Use paper cups to simulate a stack (push/pop).","Students will learn stack data structures (Last-In-First-Out) in their chosen language, implementing a stack in an IDE. The focus is on stack operations. The submittable artifact is a source file implementing a stack."
8,"Strand 1 / Standard 4",Queues,"Queue operations, FIFO","Queue Line: Simulate a queue with students lining up (First-In-First-Out).","The lesson covers queue data structures (First-In-First-Out) in a chosen language. Students will implement a queue in an IDE. The submittable artifact is a source file implementing a queue."
9,"Strand 1 / Performance",Data Structure Mini Project,"Arrays, stacks, queues","Data Structure Pitch: Present a program idea using arrays or stacks.","Students will create a program in their chosen language combining arrays, stacks, and queues. The focus is on integrating data structures. The submittable artifact is a source file and a project plan."
10,"Strand 2 / Standard 1",Linked Lists,"Nodes, linked list operations","Linked List Chain: Build a paper chain to represent a linked list.","Students will learn linked list structures in their chosen language, implementing basic operations (add, remove) in an IDE. The submittable artifact is a source file with a linked list implementation."
11,"Strand 2 / Standard 1",Doubly Linked Lists,"Bidirectional traversal, operations","Double Chain: Extend the paper chain to show bidirectional links.","The lesson covers doubly linked lists in a chosen language, focusing on bidirectional traversal. Students will implement a doubly linked list. The submittable artifact is a source file with a doubly linked list."
12,"Strand 2 / Standard 2",Hash Tables,"Hashing, collision resolution","Hash Game: Assign names to hash table slots and discuss collisions.","Students will explore hash tables and collision resolution in their chosen language, implementing a hash table in an IDE. The focus is on efficient storage. The submittable artifact is a source file with a hash table."
13,"Strand 2 / Standard 2",Binary Trees,"Tree structure, traversal","Tree Sketch: Draw a binary tree for a family hierarchy.","The lesson introduces binary trees in a chosen language, covering structure and traversal (e.g., inorder). Students will implement a binary tree. The submittable artifact is a source file with a binary tree traversal."
14,"Strand 2 / Performance",Advanced Data Structure Project,"Linked lists, hash tables, trees","Data Structure Plan: Pitch a program combining multiple data structures.","Students will create a program in their chosen language using linked lists, hash tables, or trees. The focus is on advanced data structure integration. The submittable artifact is a source file and a UML diagram."
15,"Strand 3 / Standard 1",Sorting Algorithms,"Bubble sort, selection sort","Sort Race: Manually sort a list of numbers using bubble sort steps.","Students will implement basic sorting algorithms (bubble, selection) in their chosen language, comparing efficiency in an IDE. The submittable artifact is a source file with two sorting algorithms."
16,"Strand 3 / Standard 1",Advanced Sorting,"Merge sort, quicksort","Sort Debate: Discuss why merge sort might be faster than bubble sort.","The lesson covers advanced sorting algorithms (merge sort, quicksort) in a chosen language. Students will implement a merge sort in an IDE. The submittable artifact is a source file with a merge sort implementation."
17,"Strand 3 / Standard 2",Searching Algorithms,"Linear search, binary search","Search Hunt: Find an item in a sorted vs unsorted list manually.","Students will implement linear and binary search algorithms in their chosen language, focusing on efficiency. The submittable artifact is a source file with both search algorithms."
18,"Strand 3 / Standard 2",Algorithm Efficiency,"Big-O notation, time complexity","Big-O Match: Match algorithms to their Big-O complexity.","The lesson introduces Big-O notation and time complexity analysis in a chosen language. Students will analyze an algorithm’s efficiency. The submittable artifact is a written complexity analysis, saved as a text file."
19,"Strand 3 / Performance",Algorithm Mini Project,"Sorting and searching integration","Algorithm Pitch: Present a program combining sorting and searching.","Students will create a program in their chosen language integrating sorting and searching algorithms. The focus is on practical application. The submittable artifact is a source file and a project report."
20,"Strand 4 / Standard 1",Software Development Life Cycle,"SDLC phases, agile methodology","SDLC Flow: Create a wall chart of SDLC phases.","Students will explore the Software Development Life Cycle (SDLC) and agile methodology, applying them to a hypothetical project in their chosen language. The submittable artifact is a flowchart of the SDLC, saved as an image file."
21,"Strand 4 / Standard 1",Requirements Gathering,"Requirements analysis, user stories","User Story Brainstorm: Write a user story for a simple app.","The lesson covers requirements gathering, focusing on user stories for software projects. Students will draft user stories for a project. The submittable artifact is a set of user stories, saved as a text file."
22,"Strand 4 / Standard 2",Design Patterns,"Singleton, factory patterns","Pattern Guess: Identify a design pattern in a sample code snippet.","Students will learn common design patterns (singleton, factory) in their chosen language, implementing one in an IDE. The submittable artifact is a source file using a design pattern."
23,"Strand 4 / Standard 2",UML Diagrams,"Class diagrams, sequence diagrams","UML Sketch: Draw a class diagram for a simple system.","The lesson covers UML diagrams for software design in a chosen language. Students will create a class diagram for a project. The submittable artifact is a UML diagram, saved as an image file."
24,"Strand 4 / Performance",Software Design Project,"Apply SDLC and design patterns","Design Pitch: Present a software project plan with UML.","Students will design a software project in their chosen language, applying SDLC and design patterns. The focus is on planning and design. The submittable artifact is a source file and a project design document."
25,"Strand 5 / Standard 1",File Handling,"Read/write files, serialization","File Plan: Plan how to save game scores to a file.","Students will learn file handling (reading/writing, serialization) in their chosen language, implementing file operations in an IDE. The submittable artifact is a source file that reads/writes data."
26,"Strand 5 / Standard 1",Exception Handling,"Try-catch, error management","Error Trap: Predict what happens in a buggy code snippet.","The lesson covers exception handling in a chosen language, focusing on robust error management. Students will implement try-catch blocks. The submittable artifact is a source file with exception handling."
27,"Strand 5 / Standard 2",Unit Testing,"Writing unit tests, test coverage","Test Challenge: Write a test case for a simple function.","Students will learn unit testing in their chosen language, writing tests for a program in an IDE. The focus is on test coverage. The submittable artifact is a source file with unit tests."
28,"Strand 5 / Standard 2",Debugging Techniques,"Breakpoints, debugging tools","Debug Hunt: Find a bug in a sample program using an IDE.","The lesson covers advanced debugging techniques in a chosen language’s IDE, using breakpoints and logs. Students will debug a program. The submittable artifact is a debugged source file with a debugging log."
29,"Strand 5 / Performance",File and Testing Project,"File handling, testing integration","Test Pitch: Present a program with file I/O and tests.","Students will create a program in their chosen language integrating file handling and unit tests. The focus is on robust programming. The submittable artifact is a source file and a testing report."
30,"Strand 6 / Standard 1",CS Careers Advanced,"Software engineer, data scientist","Career Match: Match skills to advanced CS roles.","The lesson explores advanced CS careers (e.g., software engineer, data scientist), with examples from industry. Students will research a role. The submittable artifact is a one-page career profile, saved as a text file."
31,"Strand 6 / Standard 1",Industry Trends,"AI, cloud computing, blockchain","Trend Debate: Discuss the impact of AI in software development.","Students will explore advanced CS trends like AI and cloud computing, debating their impact. The submittable artifact is a trend analysis paper, saved as a text file."
32,"Strand 6 / Standard 2",Portfolio Development,"Showcase projects, resume building","Portfolio Plan: List three advanced projects for a portfolio.","Students will plan a CS portfolio, showcasing projects from their chosen language. The focus is on professional presentation. The submittable artifact is a portfolio outline, saved as a text file."
33,"Workplace Skills",Team Collaboration,"Agile teams, communication","Team Role Play: Simulate an agile team meeting with roles.","The lesson focuses on collaboration and communication in agile teams for CS projects. Students will simulate a team meeting. The submittable artifact is a team role plan, saved as a text file."
34,Review,"Advanced Programming Review","Data structures, OOP, algorithms","Concept Jeopardy: Answer questions on Strands 1–3 in a quiz format.","Students will review key concepts (data structures, OOP, algorithms) through interactive exercises in their chosen language. The submittable artifact is a completed review worksheet, saved as a text file."
35,Review,"Software Engineering Review","SDLC, testing, design patterns","Design Critique: Review a sample project plan and suggest improvements.","The lesson reviews software engineering concepts (SDLC, testing, patterns) through analysis. Students will critique a project. The submittable artifact is a critique report, saved as a text file."
36,Assessment,"Midterm Project Design","Plan a project with data structures, OOP","Project Planner: Create a project plan with UML and pseudocode.","Students will design a project in their chosen language, using data structures and OOP principles. The focus is on planning. The submittable artifact is a project plan with UML, saved as a text or image file."
37,Assessment,"Midterm Project Implementation","Implement and test a project","Code Studio: Build and test a project in an IDE.","Students will implement and test a project in their chosen language, applying Strands 1–3. The focus is on execution. The submittable artifact is a source file and a project report."
38,Assessment,"Certification Practice","Prep for Skill Certification Test","Mock Cert Test: Time-based multiple choice practice.","The lesson prepares students for the Computer Programming Advanced certification test with practice questions. The focus is on test-taking strategies. The submittable artifact is a completed practice test, saved as a text file."
39,Assessment,"Semester 1 Portfolio","Showcase semester projects","Portfolio Pitch: Present a portfolio project in 60 seconds.","Students will compile a portfolio of semester projects in their chosen language, showcasing data structures and OOP. The submittable artifact is a portfolio document and a source file."
40,Wrap-up,"Semester 1 Reflection","Review progress, set goals","Reflection Wheel: Spin and share—what did you learn, enjoy?","The lesson reflects on the semester, with students presenting their progress and setting goals for Semester 2. The focus is on self-assessment. The submittable artifact is a written reflection, saved as a text file."